name: Lint

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  autofix:
    runs-on: ubuntu-latest
    # wait for to finish before running autofix and only autofix if there are errors
    needs: [lint-packages, other-checks, lint-examples]
    if: failure() && (github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'next')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ github.event.pull_request.head.repo.fork && github.token || secrets.TRPC_GITHUB_TOKEN }}
      - uses: pnpm/action-setup@v2

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-all-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-all-

      - name: Install deps (with cache)
        run: pnpm install --child-concurrency 3

      - run: pnpm turbo lint -- --fix
        continue-on-error: true
      # Temporarily disabled: https://github.com/Thinkmill/manypkg/issues/193
      # - run: pnpm manypkg fix
      #   continue-on-error: true
      - run: pnpm format-fix
        continue-on-error: true

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: auto-fix lint and/or formatting issues'

  lint-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-all-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-all-

      - name: Install deps (with cache)
        run: pnpm install --child-concurrency 3

      - name: Run ESLint
        run: pnpm turbo --filter="@trpc/*" lint

  other-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-all-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-all-

      - name: Install deps (with cache)
        run: pnpm install --child-concurrency 3

      - name: Run ts-prune
        run: pnpm lint-prune

      # Temporarily disabled: https://github.com/Thinkmill/manypkg/issues/193
      # - name: Run Manypkg
      #   run: pnpm manypkg check

      - name: Run Prettier
        run: pnpm format --list-different

  lint-examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-all-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-all-

      - name: Install deps (with cache)
        run: pnpm install --child-concurrency 3

      - name: Run ESLint
        run: pnpm turbo --filter="@examples/*" lint
